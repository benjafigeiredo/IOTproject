import { flags } from '@oclif/command';
import { IOFormat } from './io-util';
import { OutputFormatter } from './output';
import { SmartThingsCommandInterface } from './smartthings-command';
export declare function buildOutputFormatter<T>(command: SmartThingsCommandInterface, inputFormat?: IOFormat, commonOutputFormatter?: OutputFormatter<T>): OutputFormatter<T>;
export declare namespace buildOutputFormatter {
    var flags: {
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
    };
}
export declare const outputFlags: {
    output: flags.IOptionFlag<string | undefined>;
    compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
    expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
};
