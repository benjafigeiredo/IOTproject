import { Endpoint, EndpointClientConfig } from '@smartthings/core-sdk';
export interface InvitationMetadata {
    name: string;
    description: string;
    owner: string;
    termsUrl: string;
}
export interface CreateInvitation {
    resource: {
        root: {
            service: 'core' | 'iam' | 'platform' | 'mdu' | 'developer';
            id?: string;
        };
        components: {
            kind: 'root' | 'location' | 'device' | 'user' | 'property' | 'group' | 'role' | 'policy' | 'unit' | 'partner' | 'installedapp' | 'channel' | 'deviceprofile' | 'namespace' | 'driver';
            id: string;
        }[];
    };
    profileId: string;
    metadata: InvitationMetadata;
    /**
     * optional expiration in seconds from the epoch
     */
    expiration?: number;
}
export interface Invitation extends CreateInvitation {
    id: string;
    acceptUrl: string;
}
export interface InvitationSummary {
    invitationId: string;
    acceptUrl: string;
}
export declare class InvitesEndpoint extends Endpoint {
    constructor(config: EndpointClientConfig);
    create(invitation: CreateInvitation): Promise<InvitationSummary>;
    get(id: string): Promise<Invitation>;
    list(channelId: string): Promise<Invitation[]>;
    delete(id: string): Promise<void>;
    accept(id: string): Promise<void>;
}
//# sourceMappingURL=invites.d.ts.map