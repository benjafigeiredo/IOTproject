import { flags } from '@oclif/command';
import { ChooseOptions } from '@smartthings/cli-lib';
import { EdgeCommand } from '../../lib/edge-command';
interface ChooseChannelOptions extends ChooseOptions {
    includeReadOnly: boolean;
}
export declare function chooseChannel(command: EdgeCommand, promptMessage: string, channelFromArg?: string, options?: Partial<ChooseChannelOptions>): Promise<string>;
export declare const listTableFieldDefinitions: string[];
export declare const tableFieldDefinitions: string[];
export default class ChannelsCommand extends EdgeCommand {
    static description: string;
    static flags: {
        'include-read-only': import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        token: flags.IOptionFlag<string | undefined>;
        language: flags.IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    static examples: string[];
    run(): Promise<void>;
}
export {};
//# sourceMappingURL=channels.d.ts.map