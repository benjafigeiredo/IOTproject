import { flags } from '@oclif/command';
import { EdgeCommand } from '../../../lib/edge-command';
export default class PackageCommand extends EdgeCommand {
    static description: string;
    static args: {
        name: string;
        description: string;
        default: string;
    }[];
    static flags: {
        'build-only': flags.IOptionFlag<string | undefined>;
        upload: flags.IOptionFlag<string | undefined>;
        assign: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        channel: flags.IOptionFlag<string | undefined>;
        install: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        hub: flags.IOptionFlag<string | undefined>;
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        token: flags.IOptionFlag<string | undefined>;
        language: flags.IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    static examples: string[];
    run(): Promise<void>;
}
//# sourceMappingURL=package.d.ts.map