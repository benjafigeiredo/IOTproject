"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const cli_lib_1 = require("@smartthings/cli-lib");
const rules_1 = require("../rules");
class RulesUpdateCommand extends cli_lib_1.APICommand {
    async run() {
        const { args, argv, flags } = this.parse(RulesUpdateCommand);
        await super.setup(args, argv, flags);
        const config = {
            primaryKeyName: 'id',
            sortKeyName: 'name',
            listTableFieldDefinitions: ['name', 'id', 'locationId', 'locationName'],
        };
        const id = await cli_lib_1.selectFromList(this, config, args.id, () => rules_1.getRulesByLocation(this.client, flags['location-id']));
        await cli_lib_1.inputAndOutputItem(this, { tableFieldDefinitions: rules_1.tableFieldDefinitions }, async (_, data) => {
            const rule = await rules_1.getRule(this.client, id, flags['location-id']);
            return this.client.rules.update(id, data, rule.locationId);
        });
    }
}
exports.default = RulesUpdateCommand;
RulesUpdateCommand.description = 'update a rule';
RulesUpdateCommand.flags = {
    ...cli_lib_1.APICommand.flags,
    ...cli_lib_1.inputAndOutputItem.flags,
    'location-id': command_1.flags.string({
        char: 'l',
        description: 'a specific location to query',
    }),
};
RulesUpdateCommand.args = [{
        name: 'id',
        description: 'rule UUID',
    }];
