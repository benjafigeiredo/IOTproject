import { flags } from '@oclif/command';
import { Room, SmartThingsClient } from '@smartthings/core-sdk';
import { APICommand } from '@smartthings/cli-lib';
export declare const tableFieldDefinitions: string[];
export declare function getRoomsByLocation(client: SmartThingsClient, locationId?: string): Promise<RoomWithLocation[]>;
export declare type RoomWithLocation = Room & {
    locationName?: string;
};
export declare function chooseRoom(command: APICommand, locationId?: string, deviceFromArg?: string): Promise<[string, string]>;
export default class RoomsCommand extends APICommand {
    static description: string;
    static flags: {
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        'location-id': flags.IOptionFlag<string | undefined>;
        token: flags.IOptionFlag<string | undefined>;
        language: flags.IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    static aliases: string[];
    run(): Promise<void>;
}
