import { flags } from '@oclif/command';
import { Device } from '@smartthings/core-sdk';
import { APICommand, ChooseOptions, TableGenerator } from '@smartthings/cli-lib';
export declare type DeviceWithLocation = Device & {
    location?: string;
};
export declare function buildTableOutput(tableGenerator: TableGenerator, data: Device & {
    profileId?: string;
}): string;
export declare function chooseDevice(command: APICommand, deviceFromArg?: string, options?: Partial<ChooseOptions>): Promise<string>;
export default class DevicesCommand extends APICommand {
    static description: string;
    static flags: {
        'location-id': flags.IOptionFlag<string[]>;
        capability: flags.IOptionFlag<string[]>;
        'capabilities-mode': flags.IOptionFlag<string | undefined>;
        'device-id': flags.IOptionFlag<string[]>;
        'installed-app-id': flags.IOptionFlag<string | undefined>;
        verbose: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        token: flags.IOptionFlag<string | undefined>;
        language: flags.IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    run(): Promise<void>;
}
