"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const install_1 = require("./install");
const edge_command_1 = require("../../../lib/edge-command");
const cli_lib_1 = require("@smartthings/cli-lib");
class DriversUninstallCommand extends edge_command_1.EdgeCommand {
    async chooseInstalledDriver(hubId, promptMessage, commandLineDriverId) {
        const config = {
            itemName: 'driver',
            primaryKeyName: 'driverId',
            sortKeyName: 'name',
        };
        const installedDrivers = () => this.edgeClient.hubs.listInstalled(hubId);
        const preselectedId = await cli_lib_1.stringTranslateToId(config, commandLineDriverId, installedDrivers);
        return cli_lib_1.selectFromList(this, config, preselectedId, installedDrivers, promptMessage);
    }
    async run() {
        const { args, argv, flags } = this.parse(DriversUninstallCommand);
        await super.setup(args, argv, flags);
        const hubId = await install_1.chooseHub(this, 'Select a hub to uninstall from.', flags.hub);
        const driverId = await this.chooseInstalledDriver(hubId, 'Select a driver to uninstall.', args.driverId);
        await this.edgeClient.hubs.uninstallDriver(driverId, hubId);
        this.log(`driver ${driverId} uninstalled from hub ${hubId}`);
    }
}
exports.default = DriversUninstallCommand;
DriversUninstallCommand.description = 'uninstall an edge driver from a hub';
DriversUninstallCommand.flags = {
    ...edge_command_1.EdgeCommand.flags,
    hub: command_1.flags.string({
        char: 'H',
        description: 'hub id',
    }),
};
DriversUninstallCommand.args = [{
        name: 'driverId',
        description: 'id of driver to uninstall',
    }];
