"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cli_lib_1 = require("@smartthings/cli-lib");
const create_1 = require("../create");
const update_1 = require("../update");
const view_1 = require("../view");
const deviceprofiles_1 = require("../../deviceprofiles");
class DeviceProfilesViewUpdateCommand extends cli_lib_1.APICommand {
    async run() {
        const { args, argv, flags } = this.parse(DeviceProfilesViewUpdateCommand);
        await super.setup(args, argv, flags);
        const id = await deviceprofiles_1.chooseDeviceProfile(this, args.id);
        const executeUpdate = async (_, data) => {
            const profileData = { ...data };
            let presentationData = data.view;
            delete profileData.view;
            if (presentationData) {
                presentationData = view_1.augmentPresentationValues(presentationData);
            }
            else {
                presentationData = await create_1.generateDefaultConfig(this.client, id, profileData);
            }
            const presentation = await this.client.presentation.create(presentationData);
            if (!profileData.metadata) {
                profileData.metadata = {};
            }
            profileData.metadata.vid = presentation.presentationId;
            profileData.metadata.mnmn = presentation.manufacturerName;
            const profile = await this.client.deviceProfiles.update(id, update_1.cleanupRequest(profileData));
            return { ...profile, presentation: view_1.prunePresentationValues(presentation) };
        };
        await cli_lib_1.inputAndOutputItem(this, { buildTableOutput: data => view_1.buildTableOutput(this.tableGenerator, data) }, executeUpdate);
    }
}
exports.default = DeviceProfilesViewUpdateCommand;
DeviceProfilesViewUpdateCommand.description = 'update a device profile and configuration\n' +
    'Updates a device profile and device configuration and sets the vid of the profile\n' +
    'to the vid of the updated configuration. Unlike deviceprofiles:update this\n' +
    'command accepts a consolidated object that can include a device configuration\n' +
    'in a property named "view".';
DeviceProfilesViewUpdateCommand.examples = [
    '$ smartthings deviceprofiles:view:update 84042863-0d34-4c5c-b497-808daf230787 -i test.json',
    '',
    'This test.json file adds the powerMeter capability to the device and makes it available in',
    'the device detail view but not the rule builder:',
    '',
    'components:',
    '  - id: main',
    '    capabilities:',
    '      - id: switch',
    '      - id: powerMeter',
    'view:',
    '  dashboard:',
    '    states:',
    '      - capability: switch',
    '    actions:',
    '      - capability: switch',
    '  detailView:',
    '    - capability: switch',
    '    - capability: powerMeter',
    '  automation:',
    '    conditions:',
    '      - capability: switch  ',
];
DeviceProfilesViewUpdateCommand.flags = {
    ...cli_lib_1.APICommand.flags,
    ...cli_lib_1.inputAndOutputItem.flags,
};
DeviceProfilesViewUpdateCommand.args = [{
        name: 'id',
        description: 'device profile id',
    }];
DeviceProfilesViewUpdateCommand.aliases = ['device-profiles:view:update'];
