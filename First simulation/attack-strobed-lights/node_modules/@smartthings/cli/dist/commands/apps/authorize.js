"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cli_lib_1 = require("@smartthings/cli-lib");
const aws_utils_1 = require("../../lib/aws-utils");
const common_flags_1 = require("../../lib/common-flags");
class AppsAuthorizeCommand extends cli_lib_1.SmartThingsCommand {
    async run() {
        const { args, argv, flags } = this.parse(AppsAuthorizeCommand);
        await super.setup(args, argv, flags);
        aws_utils_1.addPermission(args.arn, flags.principal, flags['statement-id']).then(async (message) => {
            this.log(message);
        }).catch(err => {
            this.log(`caught error ${err}`);
        });
    }
}
exports.default = AppsAuthorizeCommand;
AppsAuthorizeCommand.description = 'authorize calls to your AWS Lambda function from SmartThings';
AppsAuthorizeCommand.flags = {
    ...cli_lib_1.SmartThingsCommand.flags,
    ...common_flags_1.lambdaAuthFlags,
};
AppsAuthorizeCommand.args = [
    {
        name: 'arn',
        description: 'the ARN of the AWS Lambda function',
        required: true,
    },
];
AppsAuthorizeCommand.examples = [
    '$ smartthings apps:authorize arn:aws:lambda:us-east-1:1234567890:function:your-test-app',
    '',
    'Note that this command is the same as running the following with the AWS CLI:',
    '',
    '$ aws lambda add-permission --region us-east-1 \\',
    '    --function-name arn:aws:lambda:us-east-1:1234567890:function:your-test-app \\',
    '    --statement-id smartthings --principal 906037444270 --action lambda:InvokeFunction',
    '',
    'It requires your machine to be configured to run the AWS CLI',
];
