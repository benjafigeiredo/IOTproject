export declare type ValidateFunction = (input: string) => boolean | string | Promise<boolean | string>;
export declare type TransformerFunction = (input: string, answers: {
    value: string;
}, flags: {
    isFinal?: boolean | undefined;
}) => string | Promise<string>;
/**
 * Converts the empty string entered by the user to the word 'none` for the user when entering
 * optional numbers.
 */
export declare const numberTransformer: TransformerFunction;
/**
 * Simple wrapper around querying a user for a string. The return value will always be
 * a string with at least one character or undefined.
 */
export declare const askForString: (message: string, validate?: ValidateFunction | undefined) => Promise<string | undefined>;
export declare const askForRequiredString: (message: string) => Promise<string>;
export declare const askForInteger: (message: string, min?: number | undefined, max?: number | undefined) => Promise<number | undefined>;
export declare const askForNumber: (message: string, min?: number | undefined, max?: number | undefined) => Promise<number | undefined>;
