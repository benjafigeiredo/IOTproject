import Command, { flags } from '@oclif/command';
import { Logger } from '@smartthings/core-sdk';
import { TableGenerator } from './table-generator';
export interface Loggable {
    readonly logger: Logger;
}
/**
 * An interface version of SmartThingsCommand to make its contract easier to mix with other
 * interfaces and to limit what we need to mock for tests.
 */
export interface SmartThingsCommandInterface extends Loggable {
    readonly flags: {
        [name: string]: any;
    };
    readonly profileConfig: {
        [name: string]: any;
    };
    readonly tableGenerator: TableGenerator;
    exit(code?: number): never;
}
/**
 * The base class for all commands in the SmartThings CLI.
 */
export declare abstract class SmartThingsCommand extends Command implements SmartThingsCommandInterface {
    static flags: {
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    private _args?;
    private _argv?;
    private _flags?;
    private _logger?;
    get logger(): Logger;
    private _profileName?;
    private _profileConfig?;
    get profileConfig(): {
        [name: string]: any;
    };
    get args(): {
        [name: string]: any;
    };
    /**
     * Return input arguments, not including flags.
     */
    get inputArgs(): string[];
    get flags(): {
        [name: string]: any;
    };
    get profileName(): string;
    protected _tableGenerator?: TableGenerator;
    get tableGenerator(): TableGenerator;
    setup(args: {
        [name: string]: any;
    }, argv: string[], flags: {
        [name: string]: any;
    }): Promise<void>;
    abort(message?: string): void;
}
