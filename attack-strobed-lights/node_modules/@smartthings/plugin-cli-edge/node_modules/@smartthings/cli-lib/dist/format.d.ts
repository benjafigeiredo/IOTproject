import { Naming, Sorting } from './basic-io';
import { IOFormat } from './io-util';
import { SmartThingsCommandInterface } from './smartthings-command';
import { TableFieldDefinition } from './table-generator';
export interface TableCommonOutputProducer<O> {
    tableFieldDefinitions: TableFieldDefinition<O>[];
}
export interface CustomCommonOutputProducer<O> {
    buildTableOutput(data: O): string;
}
export declare type CommonOutputProducer<O> = TableCommonOutputProducer<O> | CustomCommonOutputProducer<O>;
export interface TableCommonListOutputProducer<L> {
    listTableFieldDefinitions: TableFieldDefinition<L>[];
}
export interface CustomCommonListOutputProducer<L> {
    buildListTableOutput(data: L[]): string;
}
export declare type CommonListOutputProducer<L> = TableCommonListOutputProducer<L> | CustomCommonListOutputProducer<L> | Sorting;
/**
 * Format and output the given item.
 *
 * @param command The command outputting the list.
 * @param config Configuration for how to write the list. This must include either a list of
 *   table field definitions called `tableFieldDefinitions` or a function to write common-formatted
 *   output called `buildTableOutput`.
 * @param item The item to be written.
 * @param defaultIOFormat The default IOFormat to use. This should be used when a command also takes
 *   input so the output can default to the input format.
 */
export declare function formatAndWriteItem<O>(command: SmartThingsCommandInterface, config: CommonOutputProducer<O>, item: O, defaultIOFormat?: IOFormat): Promise<void>;
export declare namespace formatAndWriteItem {
    var flags: {
        output: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
    };
}
/**
 * Format and output the given list.
 *
 * @param command The command outputting the list.
 * @param config Configuration for how to write the list. This must include either a list of
 *   table field definitions called `listTableFieldDefinitions` or a function to write
 *   common-formatted output called `buildTableOutput`.
 * @param list The items to be written.
 * @param includeIndex Set this to true if you want to include an index in the output.
 * @param forUserQuery Set this to true if you're displaying this to the user for a question. This
 *   will force output to stdout and skip the JSON/YAML formatters.
 */
export declare function formatAndWriteList<L>(command: SmartThingsCommandInterface, config: CommonListOutputProducer<L> & Naming, list: L[], includeIndex?: boolean, forUserQuery?: boolean): Promise<void>;
