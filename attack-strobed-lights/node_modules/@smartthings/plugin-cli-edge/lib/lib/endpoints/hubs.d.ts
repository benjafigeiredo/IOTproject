import { Endpoint, EndpointClientConfig } from '@smartthings/core-sdk';
export interface EnrolledChannel {
    channelId: string;
    name: string;
    description?: string;
    createdDate?: string;
    lastModifiedDate?: string;
    subscriptionUrl?: string;
}
export interface InstalledDriver {
    driverId: string;
    name: string;
    description?: string;
    version: string;
    channelId: string;
    developer: string;
    vendorSupportInformation: string;
    permissions: {
        [name: string]: any;
    };
}
export declare class HubsEndpoint extends Endpoint {
    constructor(config: EndpointClientConfig);
    /**
     * Install the specified drivers into the specified hub in the specified location.
     */
    installDriver(driverId: string, hubId: string, channelId: string): Promise<void>;
    uninstallDriver(driverId: string, hubId: string): Promise<void>;
    listInstalled(hubId: string): Promise<InstalledDriver[]>;
    getInstalled(hubId: string, driverId: string): Promise<InstalledDriver>;
    enrolledChannels(hubId: string): Promise<EnrolledChannel[]>;
}
//# sourceMappingURL=hubs.d.ts.map