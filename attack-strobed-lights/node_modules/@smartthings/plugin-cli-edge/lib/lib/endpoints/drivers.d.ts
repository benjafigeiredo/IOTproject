import { Endpoint, EndpointClientConfig } from '@smartthings/core-sdk';
export interface EdgeDeviceIntegrationProfile {
    id: string;
    majorVersion: string;
}
interface EdgeZigbeeManufacturerFingerprint {
    /**
     * Reported manufacturer of the device
     */
    manufacturer?: string;
    /**
     * Reported model of the device
     */
    model?: string;
}
interface EdgeZWaveManufacturerFingerprint {
    /**
     * 16-bit manufacturer identifier assigned by the Z-Wave Specification
     */
    manufacturerId?: number;
    /**
     * 16-bit manufacturer defined product identifier
     */
    productId?: number;
    /**
     * 16-bit manufacturer defined product type
     */
    productType: number;
}
export interface EdgeDriverFingerprint {
    id: string;
    type: 'ZIGBEE_MANUFACTURER' | 'DTH' | 'ZWAVE_MANUFACTURER';
    /**
     * Label assigned to device at join time. If this is not set the driver name is used.
     */
    deviceLabel?: string;
    zigbeeManufacturer?: EdgeZigbeeManufacturerFingerprint;
    zwaveManufacturer?: EdgeZWaveManufacturerFingerprint;
}
export interface EdgeDriverSummary {
    driverId: string;
    name: string;
    /**
     * A user-scoped package key used to look up the respective driver record.
     */
    packageKey: string;
    version: string;
}
export interface EdgeDriver extends EdgeDriverSummary {
    fingerprints?: EdgeDriverFingerprint[];
}
export declare class DriversEndpoint extends Endpoint {
    constructor(config: EndpointClientConfig);
    get(id: string): Promise<EdgeDriver>;
    getRevision(id: string, version: string): Promise<EdgeDriver>;
    delete(id: string): Promise<void>;
    list(): Promise<EdgeDriverSummary[]>;
    /**
     * Uploads the zipped package represented by archiveData.
     */
    upload(archiveData: Uint8Array): Promise<EdgeDriver>;
}
export {};
//# sourceMappingURL=drivers.d.ts.map