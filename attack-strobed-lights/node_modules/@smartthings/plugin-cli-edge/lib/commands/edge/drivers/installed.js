"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const cli_lib_1 = require("@smartthings/cli-lib");
const edge_command_1 = require("../../../lib/edge-command");
const install_1 = require("../drivers/install");
class DriversInstalledCommand extends edge_command_1.EdgeCommand {
    async run() {
        const { args, argv, flags } = this.parse(DriversInstalledCommand);
        await super.setup(args, argv, flags);
        const config = {
            primaryKeyName: 'channelId',
            sortKeyName: 'name',
            tableFieldDefinitions: ['driverId', 'name', 'description', 'version', 'channelId', 'developer', 'vendorSummaryInformation'],
            listTableFieldDefinitions: ['driverId', 'name', 'description', 'version', 'channelId', 'developer', 'vendorSummaryInformation'],
        };
        const hubId = await install_1.chooseHub(this, 'Select a hub.', flags.hub, { allowIndex: true });
        await cli_lib_1.outputListing(this, config, args.idOrIndex, () => this.edgeClient.hubs.listInstalled(hubId), id => this.edgeClient.hubs.getInstalled(hubId, id));
    }
}
exports.default = DriversInstalledCommand;
DriversInstalledCommand.description = 'list all drivers installed on a given hub';
DriversInstalledCommand.flags = {
    ...edge_command_1.EdgeCommand.flags,
    ...cli_lib_1.outputListing.flags,
    hub: command_1.flags.string({
        char: 'H',
        description: 'hub id',
    }),
};
DriversInstalledCommand.args = [{
        name: 'idOrIndex',
        description: 'the driver id or number in list',
    }];
