"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const inquirer_1 = __importDefault(require("inquirer"));
const cli_lib_1 = require("@smartthings/cli-lib");
const edge_command_1 = require("../../../../lib/edge-command");
const channels_1 = require("../../channels");
const tableFieldDefinitions = ['id', 'metadata.name', 'profileId', 'expiration', 'acceptUrl'];
const defaultInvitationProfileId = '61a79569-e8fd-4a4d-9b9c-a4a55ccdd15e';
class ChannelsInvitesCreateCommand extends edge_command_1.EdgeCommand {
    async run() {
        const { args, argv, flags } = this.parse(ChannelsInvitesCreateCommand);
        await super.setup(args, argv, flags);
        const create = async (_, input) => {
            const { invitationId } = await this.edgeClient.invites.create(input);
            const invitation = await this.edgeClient.invites.get(invitationId);
            return invitation;
        };
        await cli_lib_1.inputAndOutputItem(this, { tableFieldDefinitions }, create, cli_lib_1.userInputProcessor(this));
    }
    async getInputFromUser() {
        var _a;
        const channelId = await channels_1.chooseChannel(this, 'Choose a channel:', undefined, {});
        const name = (await inquirer_1.default.prompt({
            type: 'input',
            name: 'name',
            message: 'Invitation name:',
            validate: input => input ? true : 'name is required',
        })).name;
        const description = (await inquirer_1.default.prompt({
            type: 'input',
            name: 'description',
            message: 'Invitation description:',
            validate: input => input ? true : 'description is required',
        })).description;
        const owner = (await inquirer_1.default.prompt({
            type: 'input',
            name: 'owner',
            message: 'Invitation owner:',
            validate: input => input ? true : 'owner is required',
        })).owner;
        const termsUrl = (await inquirer_1.default.prompt({
            type: 'input',
            name: 'termsUrl',
            message: 'Invitation termsUrl:',
            validate: input => input ? true : 'termsUrl is required',
        })).termsUrl;
        const profileId = (_a = this.profileConfig.defaultInvitationProfileId) !== null && _a !== void 0 ? _a : defaultInvitationProfileId;
        return {
            resource: {
                root: {
                    service: 'developer',
                },
                components: [{
                        id: channelId,
                        kind: 'channel',
                    }],
            },
            profileId,
            metadata: {
                name,
                description,
                owner,
                termsUrl,
            },
        };
    }
}
exports.default = ChannelsInvitesCreateCommand;
ChannelsInvitesCreateCommand.description = 'create an invitation';
ChannelsInvitesCreateCommand.flags = {
    ...edge_command_1.EdgeCommand.flags,
    ...cli_lib_1.inputAndOutputItem.flags,
};
ChannelsInvitesCreateCommand.aliases = ['edge:channels:invitations:create'];
