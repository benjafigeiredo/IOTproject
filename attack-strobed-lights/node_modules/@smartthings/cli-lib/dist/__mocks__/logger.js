"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.logManager = exports.loadLoggingConfig = exports.defaultLoggingConfig = exports.LogManager = void 0;
const mock_logger_1 = require("../__tests__/test-lib/mock-logger");
class LogManager {
    constructor() {
        this.getLogger = jest.fn().mockReturnValue(mock_logger_1.buildMockLogger('trace'));
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    init(config) {
        // nothing to do
    }
}
exports.LogManager = LogManager;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function defaultLoggingConfig(filename) {
    return { appenders: {}, categories: {} };
}
exports.defaultLoggingConfig = defaultLoggingConfig;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
function loadLoggingConfig(configFilename, defaultConfig) {
    return { appenders: {}, categories: {} };
}
exports.loadLoggingConfig = loadLoggingConfig;
if (!('_logManager' in global)) {
    global._logManager = new LogManager();
}
exports.logManager = global._logManager;
