"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.outputFlags = exports.buildOutputFormatter = void 0;
const command_1 = require("@oclif/command");
const input_1 = require("./input");
const io_util_1 = require("./io-util");
const output_1 = require("./output");
function buildOutputFormatter(command, inputFormat, commonOutputFormatter) {
    const outputFormat = output_1.calculateOutputFormat(command, inputFormat);
    const indent = command.flags.indent || command.profileConfig.indent;
    if (outputFormat === io_util_1.IOFormat.COMMON && commonOutputFormatter) {
        return commonOutputFormatter;
    }
    if (outputFormat == io_util_1.IOFormat.YAML) {
        return output_1.yamlFormatter(indent !== null && indent !== void 0 ? indent : 2);
    }
    return output_1.jsonFormatter(indent !== null && indent !== void 0 ? indent : 4);
}
exports.buildOutputFormatter = buildOutputFormatter;
exports.outputFlags = {
    output: command_1.flags.string({
        char: 'o',
        description: 'specify output file',
    }),
    compact: command_1.flags.boolean({
        description: 'use compact table format with no lines between body rows',
    }),
    expanded: command_1.flags.boolean({
        description: 'use expanded table format with a line between each body row',
    }),
};
buildOutputFormatter.flags = {
    ...input_1.commonIOFlags,
    ...exports.outputFlags,
};
