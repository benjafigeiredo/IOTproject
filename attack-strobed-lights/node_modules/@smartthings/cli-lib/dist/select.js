"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.selectFromList = exports.selectGeneric = exports.indefiniteArticleFor = void 0;
const basic_io_1 = require("./basic-io");
const command_util_1 = require("./command-util");
const indefiniteArticleFor = (name) => name.match(/^[aeiou]/i) ? 'an' : 'a';
exports.indefiniteArticleFor = indefiniteArticleFor;
function promptFromNaming(config) {
    return config.itemName ? `Select ${exports.indefiniteArticleFor(config.itemName)} ${config.itemName}.` : undefined;
}
async function selectGeneric(command, config, preselectedId, listItems, getIdFromUser, promptMessage, autoChoose = false) {
    if (preselectedId) {
        return preselectedId;
    }
    const items = await listItems();
    if (autoChoose && items.length === 1) {
        // eslint-disable-next-line @typescript-eslint/ban-ts-comment
        // @ts-ignore Typescript can't check that run-time variable `config.primaryKeyName` exists.
        return items[0][config.primaryKeyName];
    }
    const list = await basic_io_1.outputList(command, config, async () => items, true, true);
    if (list.length === 0) {
        // Nothing was found; user was already notified.
        command.exit(0);
    }
    return await getIdFromUser(config, list, promptMessage !== null && promptMessage !== void 0 ? promptMessage : promptFromNaming(config));
}
exports.selectGeneric = selectGeneric;
/**
 * Process selection of an item from a list. Use `preselectedId` if specified and ask the user to
 * choose from items returned by `listItems` if not.
 *
 * @param command The command that is requesting the selection.
 * @param config Configuration for primary key, sorting key and fields to display when asking the user for a selection.
 * @param preselectedId If the value passed here is truthy, it is simply returned and no further processing is done.
 * @param listItems A function that returns the list of items to display.
 * @param promptMessage A message to display to the user
 * @param autoChoose Set this to true if you want to automatically choose for the user if `listItems` returns exactly one item.
 */
async function selectFromList(command, config, preselectedId, listItems, promptMessage, autoChoose = false) {
    return selectGeneric(command, config, preselectedId, listItems, command_util_1.stringGetIdFromUser, promptMessage, autoChoose);
}
exports.selectFromList = selectFromList;
