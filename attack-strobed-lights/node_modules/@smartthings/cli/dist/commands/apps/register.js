"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const lodash_1 = tslib_1.__importDefault(require("lodash"));
const core_sdk_1 = require("@smartthings/core-sdk");
const cli_lib_1 = require("@smartthings/cli-lib");
class AppRegisterCommand extends cli_lib_1.APICommand {
    async run() {
        const { args, argv, flags } = this.parse(AppRegisterCommand);
        await super.setup(args, argv, flags);
        const config = {
            primaryKeyName: 'appId',
            sortKeyName: 'displayName',
            listTableFieldDefinitions: ['displayName', 'appType', 'appId'],
        };
        const id = await cli_lib_1.selectFromList(this, config, args.id, async () => lodash_1.default.flatten(await Promise.all([
            this.client.apps.list({ appType: core_sdk_1.AppType.WEBHOOK_SMART_APP }),
            this.client.apps.list({ appType: core_sdk_1.AppType.API_ONLY }),
        ])), 'Select an app to register.');
        await this.client.apps.register(id),
            this.log(`Registration request sent to app ${id}. Check server log for confirmation URL.`);
    }
}
exports.default = AppRegisterCommand;
AppRegisterCommand.description = 'Send request to app target URL to confirm existence and authorize lifecycle events';
AppRegisterCommand.flags = cli_lib_1.APICommand.flags;
AppRegisterCommand.args = [{
        name: 'id',
        description: 'the app id',
    }];
