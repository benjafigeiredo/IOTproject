"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildTableOutput = void 0;
const cli_lib_1 = require("@smartthings/cli-lib");
const apps_1 = require("../apps");
function buildTableOutput(tableGenerator, appSettings) {
    if (!appSettings.settings || Object.keys(appSettings.settings).length === 0) {
        return 'No application settings.';
    }
    const table = tableGenerator.newOutputTable({ head: ['Key', 'Value'] });
    if (appSettings.settings) {
        for (const key of Object.keys(appSettings.settings)) {
            table.push([key, appSettings.settings[key]]);
        }
    }
    return table.toString();
}
exports.buildTableOutput = buildTableOutput;
class AppSettingsCommand extends cli_lib_1.APICommand {
    async run() {
        const { args, argv, flags } = this.parse(AppSettingsCommand);
        await super.setup(args, argv, flags);
        const id = await apps_1.chooseApp(this, args.id, { allowIndex: true });
        await cli_lib_1.outputItem(this, { buildTableOutput: data => buildTableOutput(this.tableGenerator, data) }, () => this.client.apps.getSettings(id));
    }
}
exports.default = AppSettingsCommand;
AppSettingsCommand.description = 'get OAuth settings of the app';
AppSettingsCommand.flags = {
    ...cli_lib_1.APICommand.flags,
    ...cli_lib_1.outputListing.flags,
};
AppSettingsCommand.args = [{
        name: 'id',
        description: 'the app id',
    }];
