import { DeviceProfile, DeviceProfileRequest, PresentationDeviceConfigEntry } from '@smartthings/core-sdk';
import { APICommand, TableGenerator } from '@smartthings/cli-lib';
export interface DeviceView {
    dashboard?: {
        states: PresentationDeviceConfigEntry[];
        actions: PresentationDeviceConfigEntry[];
    };
    detailView?: PresentationDeviceConfigEntry[];
    automation?: {
        conditions: PresentationDeviceConfigEntry[];
        actions: PresentationDeviceConfigEntry[];
    };
}
export interface DeviceDefinition extends DeviceProfile {
    view?: DeviceView;
}
export interface DeviceDefinitionRequest extends DeviceProfileRequest {
    view?: DeviceView;
}
export declare function buildTableOutput(tableGenerator: TableGenerator, data: DeviceDefinition): string;
export declare function prunePresentationValues(view: DeviceView): DeviceView;
export declare function augmentPresentationValues(view: DeviceView): DeviceView;
export default class DeviceProfilesViewCommand extends APICommand {
    static description: string;
    static flags: {
        output: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        token: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        language: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: import("@oclif/command/lib/flags").IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    static aliases: string[];
    run(): Promise<void>;
}
