"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const errors_1 = require("@oclif/errors");
const cli_lib_1 = require("@smartthings/cli-lib");
const device_config_1 = require("../presentation/device-config");
const deviceprofiles_1 = require("../deviceprofiles");
class ProfilePresentationCommand extends cli_lib_1.APICommand {
    async run() {
        const { args, argv, flags } = this.parse(ProfilePresentationCommand);
        await super.setup(args, argv, flags);
        const id = await deviceprofiles_1.chooseDeviceProfile(this, args.id, { allowIndex: true });
        const profile = await this.client.deviceProfiles.get(id);
        if (!profile.metadata) {
            throw new errors_1.CLIError('No presentation defined for device profile');
        }
        const presentationConfig = await this.client.presentation.get(profile.metadata.vid, profile.metadata.mnmn);
        await cli_lib_1.formatAndWriteItem(this, { buildTableOutput: data => device_config_1.buildTableOutput(this.tableGenerator, data) }, presentationConfig);
    }
}
exports.default = ProfilePresentationCommand;
ProfilePresentationCommand.description = 'get the presentation associated with a device profile';
ProfilePresentationCommand.flags = {
    ...cli_lib_1.APICommand.flags,
    ...cli_lib_1.formatAndWriteItem.flags,
};
ProfilePresentationCommand.args = [{
        name: 'id',
        description: 'device profile id or the number in list',
    }];
ProfilePresentationCommand.aliases = ['device-profiles:device-config'];
