import { flags } from '@oclif/command';
import { SmartThingsCommand } from '@smartthings/cli-lib';
export interface ConfigData {
    [name: string]: any;
}
export declare class ConfigItem {
    name: string;
    active: string;
    token: string;
    apiUrl?: string;
    data: ConfigData;
    constructor(key: string, data: ConfigData, profileName: string);
}
export default class ConfigCommand extends SmartThingsCommand {
    static description: string;
    static flags: {
        verbose: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    run(): Promise<void>;
}
