import { flags } from '@oclif/command';
import { Rule, SmartThingsClient } from '@smartthings/core-sdk';
import { APICommand, TableFieldDefinition } from '@smartthings/cli-lib';
export declare const tableFieldDefinitions: TableFieldDefinition<Rule>[];
export declare function getRulesByLocation(client: SmartThingsClient, locationId?: string): Promise<RuleWithLocation[]>;
export declare function getRule(client: SmartThingsClient, id: string, locationId?: string): Promise<RuleWithLocation>;
export declare type RuleWithLocation = Rule & {
    locationId?: string;
    locationName?: string;
};
export default class RulesCommand extends APICommand {
    static description: string;
    static flags: {
        'location-id': flags.IOptionFlag<string | undefined>;
        output: flags.IOptionFlag<string | undefined>;
        compact: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        expanded: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        token: flags.IOptionFlag<string | undefined>;
        language: flags.IOptionFlag<string | undefined>;
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        profile: flags.IOptionFlag<string>;
    };
    static args: {
        name: string;
        description: string;
    }[];
    run(): Promise<void>;
}
