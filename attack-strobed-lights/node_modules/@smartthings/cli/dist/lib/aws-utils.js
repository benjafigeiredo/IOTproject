"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addSchemaPermission = exports.addPermission = void 0;
const tslib_1 = require("tslib");
const aws_sdk_1 = tslib_1.__importDefault(require("aws-sdk"));
async function addPermission(arn, principal = '906037444270', statementId = 'smartthings') {
    const segs = arn.split(':');
    if (segs.length < 7) {
        return 'Invalid Lambda ARN';
    }
    try {
        const region = segs[3];
        aws_sdk_1.default.config.update({ region });
        const lambda = new aws_sdk_1.default.Lambda();
        const params = {
            Action: 'lambda:InvokeFunction',
            FunctionName: arn,
            Principal: principal,
            StatementId: statementId,
        };
        await lambda.addPermission(params).promise();
        return 'Authorization added';
    }
    catch (error) {
        if (error.code === 'ResourceConflictException') {
            return 'Already authorized';
        }
        throw error;
    }
}
exports.addPermission = addPermission;
function addSchemaPermission(arn, principal = '148790070172', statementId = 'smartthings') {
    return addPermission(arn, principal, statementId);
}
exports.addSchemaPermission = addSchemaPermission;
