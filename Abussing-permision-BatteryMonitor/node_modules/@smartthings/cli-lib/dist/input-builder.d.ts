import { SmartThingsCommandInterface } from './smartthings-command';
import { InputProcessor } from './input';
/**
 * Build the most common type of input processor, which can handle data from stdin, a specified
 * file and optional "user" input formats.
 *
 * The input processors are tried in this order:
 *   1. file
 *   2. stdin
 *   3. alternateInputProcessors in the order they are listed
 *
 * @param alternateInputProcessors User input processors. Most commonly this will be a single
 * input processor that asks the user questions and builds input data based on their responses.
 * Another less common use case (which might co-exist with a Q&A input processor) would be building
 * the data from command line options.
 */
export declare function buildInputProcessor<T>(command: SmartThingsCommandInterface, ...alternateInputProcessors: InputProcessor<T>[]): InputProcessor<T>;
export declare namespace buildInputProcessor {
    var flags: {
        input: import("@oclif/command/lib/flags").IOptionFlag<string | undefined>;
        indent: import("@oclif/parser/lib/flags").IOptionFlag<number | undefined>;
        json: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
        yaml: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
    };
}
