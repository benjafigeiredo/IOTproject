"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChannelsAssignCommand = void 0;
const command_1 = require("@oclif/command");
const edge_command_1 = require("../../../lib/edge-command");
const channels_1 = require("../channels");
const drivers_1 = require("../drivers");
class ChannelsAssignCommand extends edge_command_1.EdgeCommand {
    async run() {
        var _a;
        const { args, argv, flags } = this.parse(ChannelsAssignCommand);
        await super.setup(args, argv, flags);
        const channelId = await channels_1.chooseChannel(this, 'Select a channel for the driver.', flags.channel);
        const driverId = await drivers_1.chooseDriver(this, 'Select a driver to assign.', args.driverId);
        // If the version wasn't specified, grab it from the driver.
        const version = (_a = args.version) !== null && _a !== void 0 ? _a : (await this.edgeClient.drivers.get(driverId)).version;
        await this.edgeClient.channels.assignDriver(channelId, driverId, version);
        this.log(`${driverId} ${args.version ? `(version ${args.version})` : ''} assigned to channel ${channelId}`);
    }
}
exports.ChannelsAssignCommand = ChannelsAssignCommand;
ChannelsAssignCommand.description = 'assign a driver to a channel';
ChannelsAssignCommand.flags = {
    ...edge_command_1.EdgeCommand.flags,
    'channel': command_1.flags.string({
        char: 'C',
        description: 'channel id',
    }),
};
ChannelsAssignCommand.args = [
    {
        name: 'driverId',
        description: 'driver id',
    },
    {
        name: 'version',
        description: 'driver version',
    },
];
ChannelsAssignCommand.aliases = ['edge:drivers:publish'];
