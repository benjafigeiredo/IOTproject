import { IdRetrievalFunction, ListDataFunction, Naming, Sorting } from './basic-io';
import { CommonListOutputProducer } from './format';
import { SmartThingsCommandInterface } from './smartthings-command';
export declare type SelectingConfig<L> = Sorting & Naming & CommonListOutputProducer<L>;
export declare const indefiniteArticleFor: (name: string) => string;
export declare function selectGeneric<ID, L>(command: SmartThingsCommandInterface, config: SelectingConfig<L>, preselectedId: ID | undefined, listItems: ListDataFunction<L>, getIdFromUser: IdRetrievalFunction<ID, L>, promptMessage?: string, autoChoose?: boolean): Promise<ID>;
/**
 * Process selection of an item from a list. Use `preselectedId` if specified and ask the user to
 * choose from items returned by `listItems` if not.
 *
 * @param command The command that is requesting the selection.
 * @param config Configuration for primary key, sorting key and fields to display when asking the user for a selection.
 * @param preselectedId If the value passed here is truthy, it is simply returned and no further processing is done.
 * @param listItems A function that returns the list of items to display.
 * @param promptMessage A message to display to the user
 * @param autoChoose Set this to true if you want to automatically choose for the user if `listItems` returns exactly one item.
 */
export declare function selectFromList<L>(command: SmartThingsCommandInterface, config: SelectingConfig<L>, preselectedId: string | undefined, listItems: ListDataFunction<L>, promptMessage?: string, autoChoose?: boolean): Promise<string>;
