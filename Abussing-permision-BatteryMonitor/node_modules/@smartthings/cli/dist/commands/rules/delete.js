"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const cli_lib_1 = require("@smartthings/cli-lib");
const rules_1 = require("../rules");
class RulesDeleteCommand extends cli_lib_1.APICommand {
    async run() {
        var _a;
        const { args, argv, flags } = this.parse(RulesDeleteCommand);
        await super.setup(args, argv, flags);
        const config = {
            primaryKeyName: 'id',
            sortKeyName: 'name',
            listTableFieldDefinitions: ['name', 'id', 'locationId', 'locationName'],
        };
        const id = await cli_lib_1.selectFromList(this, config, args.id, () => rules_1.getRulesByLocation(this.client, flags['location-id']), 'Select a rule to delete.');
        const locationIdForRule = async () => {
            const rule = await rules_1.getRule(this.client, id, flags['location-id']);
            return rule.locationId;
        };
        const locationId = (_a = flags['location-id']) !== null && _a !== void 0 ? _a : await locationIdForRule();
        await this.client.rules.delete(id, locationId);
        this.log(`Rule ${id} deleted.`);
    }
}
exports.default = RulesDeleteCommand;
RulesDeleteCommand.description = 'delete a rule';
RulesDeleteCommand.flags = {
    ...cli_lib_1.APICommand.flags,
    'location-id': command_1.flags.string({
        char: 'l',
        description: 'a specific location to query',
    }),
};
RulesDeleteCommand.args = [{
        name: 'id',
        description: 'rule UUID',
    }];
