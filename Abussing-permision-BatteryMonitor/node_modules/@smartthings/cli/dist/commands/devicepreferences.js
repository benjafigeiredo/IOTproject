"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.chooseDevicePreference = exports.tableFieldDefinitions = void 0;
const cli_lib_1 = require("@smartthings/cli-lib");
exports.tableFieldDefinitions = [
    'preferenceId', 'title', 'name', 'description', 'required', 'preferenceType',
    { prop: 'definition.default', skipEmpty: true },
    { prop: 'definition.minimum', skipEmpty: true },
    { prop: 'definition.maximum', skipEmpty: true },
    { prop: 'definition.minLength', skipEmpty: true },
    { prop: 'definition.maxLength', skipEmpty: true },
    { prop: 'definition.stringType', skipEmpty: true },
    {
        prop: 'definition.options',
        skipEmpty: true,
        value: (pref) => {
            if (pref.preferenceType !== 'enumeration') {
                return undefined;
            }
            return Object.entries(pref.definition.options).map(([key, value]) => `${key}: ${value}`).join('\n');
        },
    },
];
async function chooseDevicePreference(command, preferenceFromArg) {
    const config = {
        itemName: 'title',
        primaryKeyName: 'preferenceId',
        sortKeyName: 'preferenceId',
        listTableFieldDefinitions: ['preferenceId', 'title', 'name'],
    };
    return cli_lib_1.selectFromList(command, config, preferenceFromArg, () => command.client.devicePreferences.list());
}
exports.chooseDevicePreference = chooseDevicePreference;
class DevicePreferencesCommand extends cli_lib_1.APICommand {
    async run() {
        const { args, argv, flags } = this.parse(DevicePreferencesCommand);
        await super.setup(args, argv, flags);
        const config = {
            itemName: 'device preference',
            primaryKeyName: 'preferenceId',
            sortKeyName: 'preferenceId',
            tableFieldDefinitions: exports.tableFieldDefinitions,
            listTableFieldDefinitions: ['preferenceId', 'title', 'name', 'description',
                'required', 'preferenceType'],
        };
        await cli_lib_1.outputListing(this, config, args.idOrIndex, () => this.client.devicePreferences.list(), id => this.client.devicePreferences.get(id));
    }
}
exports.default = DevicePreferencesCommand;
DevicePreferencesCommand.description = 'list device preferences or get information for a specific device preference';
DevicePreferencesCommand.flags = {
    ...cli_lib_1.APICommand.flags,
    ...cli_lib_1.outputListing.flags,
};
DevicePreferencesCommand.args = [
    { name: 'idOrIndex', description: 'device preference id or index' },
];
DevicePreferencesCommand.aliases = ['device-preferences'];
DevicePreferencesCommand.examples = [
    '$ smartthings devicepreferences                       # list all device preferences, sorted by title',
    '$ smartthings devicepreferences device-preference-id  # display details for preference with specified id',
    '$ smartthings devicepreferences 2                     # display details for second preference when sorted by title',
    '$ smartthings devicepreferences 3 -y                  # display details for third preference as YAML',
    '$ smartthings devicepreferences 3 -o dp.json          # write details as JSON for third preference to dp.json',
];
